// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"
)

// SLOPluginApplyConfiguration represents a declarative configuration of the SLOPlugin type for use
// with apply.
type SLOPluginApplyConfiguration struct {
	ID       *string          `json:"id,omitempty"`
	Config   *json.RawMessage `json:"config,omitempty"`
	Priority *int             `json:"priority,omitempty"`
}

// SLOPluginApplyConfiguration constructs a declarative configuration of the SLOPlugin type for use with
// apply.
func SLOPlugin() *SLOPluginApplyConfiguration {
	return &SLOPluginApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *SLOPluginApplyConfiguration) WithID(value string) *SLOPluginApplyConfiguration {
	b.ID = &value
	return b
}

// WithConfig sets the Config field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Config field is set to the value of the last call.
func (b *SLOPluginApplyConfiguration) WithConfig(value json.RawMessage) *SLOPluginApplyConfiguration {
	b.Config = &value
	return b
}

// WithPriority sets the Priority field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Priority field is set to the value of the last call.
func (b *SLOPluginApplyConfiguration) WithPriority(value int) *SLOPluginApplyConfiguration {
	b.Priority = &value
	return b
}
