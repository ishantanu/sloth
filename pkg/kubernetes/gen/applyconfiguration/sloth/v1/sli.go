// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SLIApplyConfiguration represents a declarative configuration of the SLI type for use
// with apply.
type SLIApplyConfiguration struct {
	Raw    *SLIRawApplyConfiguration    `json:"raw,omitempty"`
	Events *SLIEventsApplyConfiguration `json:"events,omitempty"`
	Plugin *SLIPluginApplyConfiguration `json:"plugin,omitempty"`
}

// SLIApplyConfiguration constructs a declarative configuration of the SLI type for use with
// apply.
func SLI() *SLIApplyConfiguration {
	return &SLIApplyConfiguration{}
}

// WithRaw sets the Raw field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Raw field is set to the value of the last call.
func (b *SLIApplyConfiguration) WithRaw(value *SLIRawApplyConfiguration) *SLIApplyConfiguration {
	b.Raw = value
	return b
}

// WithEvents sets the Events field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Events field is set to the value of the last call.
func (b *SLIApplyConfiguration) WithEvents(value *SLIEventsApplyConfiguration) *SLIApplyConfiguration {
	b.Events = value
	return b
}

// WithPlugin sets the Plugin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Plugin field is set to the value of the last call.
func (b *SLIApplyConfiguration) WithPlugin(value *SLIPluginApplyConfiguration) *SLIApplyConfiguration {
	b.Plugin = value
	return b
}
