// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/slok/sloth/pkg/kubernetes/api/sloth/v1"
	slothv1 "github.com/slok/sloth/pkg/kubernetes/gen/applyconfiguration/sloth/v1"
	typedslothv1 "github.com/slok/sloth/pkg/kubernetes/gen/clientset/versioned/typed/sloth/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakePrometheusServiceLevels implements PrometheusServiceLevelInterface
type fakePrometheusServiceLevels struct {
	*gentype.FakeClientWithListAndApply[*v1.PrometheusServiceLevel, *v1.PrometheusServiceLevelList, *slothv1.PrometheusServiceLevelApplyConfiguration]
	Fake *FakeSlothV1
}

func newFakePrometheusServiceLevels(fake *FakeSlothV1, namespace string) typedslothv1.PrometheusServiceLevelInterface {
	return &fakePrometheusServiceLevels{
		gentype.NewFakeClientWithListAndApply[*v1.PrometheusServiceLevel, *v1.PrometheusServiceLevelList, *slothv1.PrometheusServiceLevelApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("prometheusservicelevels"),
			v1.SchemeGroupVersion.WithKind("PrometheusServiceLevel"),
			func() *v1.PrometheusServiceLevel { return &v1.PrometheusServiceLevel{} },
			func() *v1.PrometheusServiceLevelList { return &v1.PrometheusServiceLevelList{} },
			func(dst, src *v1.PrometheusServiceLevelList) { dst.ListMeta = src.ListMeta },
			func(list *v1.PrometheusServiceLevelList) []*v1.PrometheusServiceLevel {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.PrometheusServiceLevelList, items []*v1.PrometheusServiceLevel) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
